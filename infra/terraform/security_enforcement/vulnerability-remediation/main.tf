terraform {
  required_version = ">= 1.8"
  required_providers {
    aws        = { source = "hashicorp/aws", version = "~> 5.50" }
    docker     = { source = "kreuzwerker/docker", version = "~> 3.0" }
    helm       = { source = "hashicorp/helm", version = "~> 2.13" }
    kubernetes = { source = "hashicorp/kubernetes", version = "~> 2.30" }
  }
}

variable "region" { default = "us-east-1" }
variable "account_id" { type = string } # e.g. 123456789012
variable "cluster_name" { default = "wiz-demo" }
locals { ecr_repo_name = "nvidiascape-demo" }

provider "aws" { region = var.region }

/* --- ECR auth so the docker provider can push -------------------- */
data "aws_ecr_authorization_token" "token" {}

provider "docker" {
  registry_auth {
    address  = data.aws_ecr_authorization_token.token.proxy_endpoint
    username = data.aws_ecr_authorization_token.token.user_name
    password = data.aws_ecr_authorization_token.token.password
  }
}

/* --- Kubernetes/Helm reach the cluster via the AWS provider ------- */
data "aws_eks_cluster" "this" { name = var.cluster_name }
data "aws_eks_cluster_auth" "this" { name = var.cluster_name }

provider "kubernetes" {
  host                   = data.aws_eks_cluster.this.endpoint
  cluster_ca_certificate = base64decode(data.aws_eks_cluster.this.certificate_authority[0].data)
  token                  = data.aws_eks_cluster_auth.this.token
}

provider "helm" {
  kubernetes {
    host                   = data.aws_eks_cluster.this.endpoint
    cluster_ca_certificate = base64decode(data.aws_eks_cluster.this.certificate_authority[0].data)
    token                  = data.aws_eks_cluster_auth.this.token
  }
}
